@page "/add-order"
@inject OrderManager OrderManager

<h3>Add New Order</h3>

<div class="form">
    <label for="orderDate">Order Date:</label>
    <input type="date" id="orderDate" @bind="NewOrderDate" />

    <h4>Items</h4>
    <table>
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Price:C</td>
                    <td>@item.Quantity</td>
                    <td><button @onclick="() => RemoveItem(item)">Remove</button></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="add-item-form">
        <label for="product">Product:</label>
        <select id="product" @bind="SelectedProductName">
            <option disabled selected value="">Select a product</option>
            @foreach (var product in ProductCatalog.Products)
            {
                <option value="@product.Name">@product.Name (@product.Price:C)</option>
            }
        </select>

        <label for="quantity">Quantity:</label>
        <input id="quantity" type="number" @bind="NewItemQuantity" min="1" />

        <button @onclick="AddItem">Add Item</button>
    </div>

    <button @onclick="SaveOrder">Save Order</button>
</div>

<p class="success-message">@SuccessMessage</p>

@code {
    private DateTime NewOrderDate = DateTime.Now;
    private List<Item> Items = new();
    private string SelectedProductName = string.Empty;
    private int NewItemQuantity;
    private string SuccessMessage = string.Empty;

    private void AddItem()
    {
        if (!string.IsNullOrEmpty(SelectedProductName) && NewItemQuantity > 0)
        {
            var selectedProduct = ProductCatalog.Products.FirstOrDefault(p => p.Name == SelectedProductName);
            if (selectedProduct != null)
            {
                var existingItem = Items.FirstOrDefault(i => i.Name == selectedProduct.Name);
                if (existingItem != null)
                {
                    existingItem.Quantity += NewItemQuantity;
                }
                else
                {
                    Items.Add(new Item
                    {
                        Name = selectedProduct.Name,
                        Price = selectedProduct.Price,
                        Quantity = NewItemQuantity
                    });
                }

                // Reset fields
                SelectedProductName = string.Empty;
                NewItemQuantity = 0;
            }
        }
    }

    private void RemoveItem(Item item)
    {
        Items.Remove(item);
    }

    private void SaveOrder()
    {
        if (Items.Count == 0)
        {
            SuccessMessage = "Cannot save an order with no items!";
            return;
        }

        var newOrder = new Order
        {
            OrderDate = NewOrderDate,
            Items = Items
        };

        OrderManager.AddOrder(newOrder);
        Items.Clear();
        SuccessMessage = "Order saved successfully!";
    }
}